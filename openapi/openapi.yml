openapi: 3.0.0
info:
  title: 投稿アプリAPI
  version: 1.0.0

paths:
  /v1/users:
    post:
      tags:
        - user
      description: "ユーザーを作成する"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 8
                  maxLength: 256
              required:
                - mail
                - password
      responses:
        "201":
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
                    format: email
        "400":
          $ref: "#/components/responses/BadRequest"
    put:
      tags:
        - user
      description: "ユーザーを編集する"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Success
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /v1/users/{userId}:
    get:
      tags:
        - user
      summary: ユーザー詳細
      description: Retrieve user information by providing a unique user ID.
      parameters:
        - name: userId
          in: path
          description: The unique identifier of the user.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User information retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  profile_path:
                    type: string
                  created_at:
                    type: string
                    format: date
                  updated_at:
                    type: string
                    format: date
        "404":
          description: User not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: '404 Not Found'
  /v1/login:
    post:
      tags:
        - auth
      security: [ ]
      description: "ログインする"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mail:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 8
                  maxLength: 256
              required:
                - mail
                - password
      responses:
        "201":
          $ref: "#/components/responses/Authorized"
        "400":
          $ref: "#/components/responses/BadRequest"
  /v1/posts:
    get:
      tags:
        - post
      description: 投稿一覧取得
      responses:
        "200":
          description: Post information retrieved successfully.
          content:
            "application/json":
              schema:
                allOf:
                  - $ref: "#/components/schemas/posts"
    post:
      tags:
        - post
      summary: "投稿作成"
      description: 投稿作成
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'タイトル'
                content:
                  type: string
                  example: '内容'
      responses:
        "201":
          description: Success
          content:
            "application/json":
              schema:
                type: object
                properties:
                  id:
                    type: number
                  title:
                    type: string
                    example: '投稿タイトル'
                  content:
                    type: string
                    example: '内容'
        "401":
          $ref: "#/components/responses/Unauthorized"
        "400":
          $ref: "#/components/responses/BadRequest"
  /v1/posts/{postId}:
    # get:
    #   tags:
    #     - post
    #   description: 投稿詳細
    #   responses:
    #     "200":
    #       description: Post
    #       content:
    #         application/json:
    #           schema:
    #             type: object
    #             properties:
    #               title:
    #                 type: string
    #                 example: 'タイトル'
    #               content:
    #                 type: string
    #                 example: '内容'

    put:
      tags:
        - post
      description: 投稿の編集
      parameters:
        - $ref: "#/components/parameters/postId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: 'タイトル'
                content:
                  type: string
                  example: '内容'
      responses:
        "201":
          description: Success
          content:
            "application/json":
              schema:
                type: object
                properties:
                  title:
                    type: string
                    example: '投稿タイトル'
                  content:
                    type: string
                    example: '内容'
                required:
                  - title
                  - content

        "401":
          $ref: "#/components/responses/Unauthorized"
        "400":
          $ref: "#/components/responses/BadRequest"
components:
  parameters:
    postId:
      in: path
      name: postId
      description: "投稿ID"
      required: true
      schema:
        type: number
  schemas:
    post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          example: "タイトル"
        content:
          type: string
          example: "内容"
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
        user:
          $ref: "#/components/schemas/user"
    posts:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: "#/components/schemas/post"
      required:
        - users
    user:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        profile_path:
          type: string

  responses:
    Authorized:
      description: "認証成功"
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
              id_token:
                type: string
              user_id:
                type: number
            required:
              - access_token
              - id_token
              - user_id
    BadRequest:
      description: Bad Request
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
    NotFound:
      description: Not Found